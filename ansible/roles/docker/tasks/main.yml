---
- name: Ensure required packages are installed
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Add Docker's official GPG key
  ansible.builtin.shell: |
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Determine Debian architecture
  ansible.builtin.set_fact:
    docker_deb_arch: >-
      {{ 'amd64' if ansible_architecture in ['x86_64','x86-64'] else
         'arm64' if ansible_architecture in ['aarch64','arm64'] else
         'armhf' if ansible_architecture in ['armv7l','armv7'] else
         ansible_architecture }}

- name: Add Docker apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ docker_deb_arch }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    filename: docker
    state: present

- name: Update apt cache (docker repo)
  ansible.builtin.apt:
    update_cache: true

- name: Install Docker Engine and Compose plugin
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Ensure docker service is enabled and started
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Add {{ ansible_user | default('azureuser') }} to docker group
  ansible.builtin.user:
    name: "{{ ansible_user | default('azureuser') }}"
    groups: docker
    append: true
